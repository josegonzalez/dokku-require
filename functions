#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
DOKKU_REQUIRE_PREFIX="${DOKKU_REQUIRE_PREFIX:-dokku}"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

require_get_app_plugins() {
  local JSON_NODE="$1"
  cat | python -c 'import json,sys;obj=json.load(sys.stdin);print json.dumps(obj'"${JSON_NODE}"').strip("\"")';
}

require_get_json_len() {
  local JSON_NODE="$1"
  cat | python -c 'import json,sys;obj=json.load(sys.stdin);print len(obj'"${JSON_NODE}"')';
}

require_install_link() {
  declare desc="installs and links plugin passed in"
  local PLUGIN="$1"
  if [[ -d "$PLUGIN_AVAILABLE_PATH/$PLUGIN/" ]]; then
    {
      dokku_log_info1 "Setting up $PLUGIN"
      dokku "$PLUGIN:create" $APP &&
      DOKKU_CONFIG_RESTART=false dokku "$PLUGIN:link" "$APP" "$APP"
    }||{
      dokku_log_info1 "$PLUGIN already setup"
    }
  else
    dokku_log_info1 "$PLUGIN plugin is not available on your system - attempting to contine without $PLUGIN"
  fi
}

require_install_commands() {
  declare desc="runs commands passed in from plugin list"
  local INDEX="$1"
  # get each plugin from json
  local COUNT=0
  local PLUGIN=$(require_get_app_plugins "[\"$DOKKU_REQUIRE_PREFIX\"][\"plugins\"][${INDEX}][\"name\"]" < "$APP_JSON_FILE" 2>&1)
  if [[ -d "$PLUGIN_AVAILABLE_PATH/$PLUGIN/" ]]; then
    local TOTAL=$(require_get_json_len "[\"$DOKKU_REQUIRE_PREFIX\"][\"plugins\"][${INDEX}][\"commands\"]" < "$APP_JSON_FILE" 2>&1)
    while [[ "$COUNT" -lt "$TOTAL" ]]; do
      COMMAND=$(require_get_app_plugins "[\"$DOKKU_REQUIRE_PREFIX\"][\"plugins\"][${INDEX}][\"commands\"][${COUNT}]" < "$APP_JSON_FILE" 2>&1)
      if [[ $? -ne 0 ]]; then
        break
      else
        # swap $APP for app name in commands
        DOKKU_CONFIG_RESTART=false $(sed "s/\$APP/${APP}/g" <<< "dokku $COMMAND") || break
      fi
      let COUNT=COUNT+1
    done
  else
    dokku_log_info1 "$PLUGIN plugin is not available on your system - attempting to contine without $PLUGIN"
  fi
}

require_add_volumes() {
  declare desc="adds volumes from app.json file"
  # get each plugin from json, limit to 20 to prevent silly loop
  local COUNT=0
  local TOTAL=$(require_get_json_len "[\"$DOKKU_REQUIRE_PREFIX\"][\"volumes\"]" < "$APP_JSON_FILE" 2>&1)
  dokku_log_info1 "Setting up $TOTAL volumes from app.json"
  while [[ "$COUNT" -lt "$TOTAL" ]]; do
    local HOSTPATH=$(require_get_app_plugins "[\"$DOKKU_REQUIRE_PREFIX\"][\"volumes\"][${COUNT}][\"host\"]" < "$APP_JSON_FILE" 2>&1)
    local APPPATH=$(require_get_app_plugins "[\"$DOKKU_REQUIRE_PREFIX\"][\"volumes\"][${COUNT}][\"app\"]" < "$APP_JSON_FILE" 2>&1)
    if [[ $? -eq 0 ]] && [[ -n "$HOSTPATH" ]] && [[ -n "$APPPATH" ]]; then
      # swap $APP for app name in commands
      $(sed "s/\$APP/${APP}/g" <<< "dokku docker-options:add $APP deploy,run -v $HOSTPATH:$APPPATH")
      $(sed "s/\$APP/${APP}/g" <<< "mkdir -p $HOSTPATH")
    else
      break
    fi
    let COUNT=COUNT+1
  done
}

require_mode_cmd() {
  declare desc="sets DOKKU_REQUIRE_PREFIX"
  local cmd="mode"
  [[ -d $DOKKU_ROOT/.dokkurc ]] || mkdir -p "$DOKKU_ROOT/.dokkurc"
  [[ -z $2 ]] && dokku_log_fail "Please specify an app to run the command on"

  echo "Setting DOKKU_REQUIRE_PREFIX to $2"
  echo "export DOKKU_REQUIRE_PREFIX=$2" > "$DOKKU_ROOT/.dokkurc/DOKKU_REQUIRE_PREFIX"
}
